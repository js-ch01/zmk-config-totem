#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define NUM  2
#define SYS  3
#define MSE  4
#define ETC  5

// mod-tap

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
    tapping-term-ms = <200>;
};

&lt {
    quick-tap-ms = <200>;
};

&sk {
    release-after-ms = <1500>;
};

//      ┏━━━━┳━━━━┳━━━━┳━━━━┳━━━━┓  ┏━━━━┳━━━━┳━━━━┳━━━━┳━━━━┓
//      ┃ 0  ┃ 1  ┃ 2  ┃ 3  ┃ 4  ┃  ┃ 5  ┃ 6  ┃ 7  ┃ 8  ┃ 9  ┃
//      ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫  ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
//      ┃ 10 ┃ 11 ┃ 12 ┃ 13 ┃ 14 ┃  ┃ 15 ┃ 16 ┃ 17 ┃ 18 ┃ 19 ┃
// ┏━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫  ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┓
// ┃ 20 ┃ 21 ┃ 22 ┃ 23 ┃ 24 ┃ 25 ┃  ┃ 26 ┃ 27 ┃ 28 ┃ 29 ┃ 30 ┃ 31 ┃
// ┗━━━━┻━━━━┻━━━━╋━━━━╋━━━━╋━━━━┫  ┣━━━━╋━━━━╋━━━━╋━━━━┻━━━━┻━━━━┛
//                ┃ 32 ┃ 33 ┃ 34 ┃  ┃ 35 ┃ 36 ┃ 37 ┃
//                ┗━━━━┻━━━━┻━━━━┛  ┗━━━━┻━━━━┻━━━━┛

/ {
    behaviors {
        auto_shift: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            tapping-term-ms = <180>;
        };

        rpi: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            label = "REQUIRE_PRIOR_IDLE";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 0>;
            bindings = <&kp ESC>;
            layers = <0 2 1>;
        };

        combo_lpar {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LPAR>;
            layers = <0 1 2>;
        };

        combo_rpar {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp RPAR>;
            layers = <0 1 2>;
        };

        combo_lbkt {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp LBKT>;
            layers = <0 1 2>;
        };

        combo_rbkt {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp RBKT>;
            layers = <0 1 2>;
        };

        combo_lbrc {
            timeout-ms = <50>;
            key-positions = <12 11>;
            bindings = <&kp LBRC>;
            layers = <0 1 2>;
        };

        combo_rbrc {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RIGHT_BRACE>;
            layers = <0 1 2>;
        };

        combo_lt {
            timeout-ms = <50>;
            key-positions = <2 11>;
            bindings = <&kp LT>;
            layers = <0 1 2>;
        };

        combo_gt {
            timeout-ms = <50>;
            key-positions = <7 18>;
            bindings = <&kp GT>;
            layers = <0 1 2>;
        };

        combo_plus {
            timeout-ms = <50>;
            key-positions = <23 24>;
            bindings = <&kp PLUS>;
            layers = <0 1 2>;
        };

        combo_equal {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp EQUAL>;
            layers = <0 1 2>;
        };

        combo_minus {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp MINUS>;
            layers = <0 1 2>;
        };

        combo_under {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp UNDER>;
            layers = <0 1 2>;
        };

        combo_dqt {
            timeout-ms = <50>;
            key-positions = <7 17>;
            bindings = <&kp DQT>;
            layers = <0 1 2>;
        };

        combo_enter1 {
            bindings = <&kp ENTER>;
            key-positions = <23 12>;
            layers = <0 1 2 5>;
        };

        combo_spc1 {
            bindings = <&kp SPACE>;
            key-positions = <13 24 13 24>;
            layers = <0 1 2>;
        };

        combo_cleanLayer {
            bindings = <&tog 7>;
            key-positions = <10 11 12 13>;
            layers = <0 7>;
        };

        combo_MSE2 {
            bindings = <&tog 4>;
            key-positions = <36 37>;
            layers = <0 4>;
        };

        combo_sqt {
            bindings = <&kp SQT>;
            key-positions = <8 18>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        combo_colon {
            bindings = <&kp COLON>;
            key-positions = <6 16>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        combo.capswords {
            bindings = <&caps_word>;
            key-positions = <3 13>;
            timeout-ms = <50>;
            layers = <0 2 1>;
        };

        combo_repeat {
            bindings = <&key_repeat>;
            key-positions = <5 15>;
            layers = <0 1 2 3 4>;
        };

        combo_MSE1 {
            bindings = <&tog 4>;
            key-positions = <33 32>;
            layers = <0 4>;
        };

        combo_game_layer {
            bindings = <&tog 5>;
            key-positions = <35 34>;
            layers = <0 5>;
        };

        combo_bspc2 {
            bindings = <&kp BACKSPACE>;
            key-positions = <16 27>;
            layers = <0 1 2>;
        };

        combo_del2 {
            bindings = <&kp DEL>;
            key-positions = <17 28>;
            layers = <0 1 2>;
        };

        combo_n0 {
            bindings = <&kp N0>;
            key-positions = <1 11>;
            timeout-ms = <50>;
            layers = <0 2 1>;
        };

        combo_N1 {
            bindings = <&kp N1>;
            key-positions = <2 12>;
            timeout-ms = <50>;
            layers = <0 2 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
           &auto_shift LS(Q) Q  &auto_shift LS(W) W  &auto_shift LS(E) E  &auto_shift LS(R) R  &auto_shift LS(T) T    &kp Y       &kp U        &auto_shift LS(I) I  &auto_shift LS(O) O  &auto_shift LS(P) P
           &mt LGUI A           &mt LALT S           &mt LSHFT D          &mt LCTRL F          &kp G                  &kp H       &mt LCTRL J  &mt RSHIFT K         &mt LALT L           &mt RGUI SEMI
&sk LCTRL  &lt 4 Z              &kp X                &kp C                &kp V                &kp B                  &kp N       &kp M        &kp COMMA            &kp DOT              &lt 4 SLASH          &sk LEFT_ALT
                                                     &lt 1 TAB            &lt 2 BACKSPACE      &lt 3 DEL              &lt 3 RALT  &lt 2 SPACE  &lt 1 ENTER
            >;
        };

        navi_layer {
            label = "NAV";
            bindings = <
           &trans     &mwh SCROLL_LEFT  &trans     &mwh SCROLL_RIGHT  &trans              &kp INS           &kp HOME   &kp UP     &kp END    &kp PG_UP
           &kp LGUI   &kp LALT          &kp LSHFT  &kp LCTRL          &mwh SCROLL_UP      &mwh SCROLL_UP    &kp LEFT   &kp DOWN   &kp RIGHT  &kp PG_DN
&kp LC(F)  &kp LC(Z)  &kp LC(X)         &kp LC(C)  &kp LC(V)          &mwh SCROLL_DOWN    &mwh SCROLL_DOWN  &kp LC(V)  &kp LC(C)  &kp LC(X)  &kp LC(Z)  &kp LC(J)
                                        &trans     &trans             &trans              &trans            &trans     &trans
            >;
        };

        num_layer {
            label = "NUM";
            bindings = <
            &kp GRAVE     &kp TILDE     &kp CARET       &kp AMPS    &kp PIPE        &kp STAR   &kp N7  &kp N8  &kp N9  &kp PLUS
            &kp EXCL      &kp AT        &kp HASH        &kp DOLLAR  &kp PERCENT     &kp SLASH  &kp N4  &kp N5  &kp N6  &kp MINUS
&kp LSHIFT  &sk LEFT_GUI  &sk LEFT_ALT  &sk LEFT_SHIFT  &sk LCTRL   &kp QUESTION    &kp DOT    &kp N1  &kp N2  &kp N3  &kp BSLH   &kp SPACE
                                        &trans          &trans      &trans          &trans     &trans  &kp N0
            >;
        };

        func_layer {
            label = "FUN";
            bindings = <
        &kp CAPS           &bt BT_SEL 0  &bt BT_SEL 1          &bt BT_SEL 2          &bt BT_CLR    &kp PSCRN        &kp F7  &kp F8  &kp F9  &kp F12
        &kp RCTRL          &none         &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_DEC  &kp C_PP      &kp SLCK         &kp F4  &kp F5  &kp F6  &kp F11
&trans  &kp K_APPLICATION  &trans        &kp C_VOL_UP          &kp C_VOL_DN          &kp C_MUTE    &kp PAUSE_BREAK  &kp F1  &kp F2  &kp F3  &kp F10  &none
                                         &none                 &none                 &none         &none            &none   &none
            >;
        };

        mouse_layer {
            label = "MSE";
            bindings = <
        &mwh SCROLL_UP    &mwh SCROLL_LEFT  &mmv MOVE_UP    &mwh SCROLL_RIGHT  &trans              &trans            &mwh SCROLL_LEFT  &mmv MOVE_UP    &mwh SCROLL_RIGHT  &mwh SCROLL_UP
        &mwh SCROLL_DOWN  &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT    &mwh SCROLL_UP      &mwh SCROLL_UP    &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT    &mwh SCROLL_DOWN
&trans  &trans            &trans            &kp LEFT_SHIFT  &kp LCTRL          &mwh SCROLL_DOWN    &mwh SCROLL_DOWN  &kp LCTRL         &kp LEFT_SHIFT  &trans             &trans            &trans
                                            &mkp LCLK       &mkp MCLK          &mkp RCLK           &mkp LCLK         &mkp MCLK         &mkp RCLK
            >;
        };

        game_layer {
            bindings = <
              &kp Q  &kp W  &kp E      &kp R        &kp T        &kp Y       &kp U        &kp I        &kp O    &kp P
              &kp A  &kp S  &kp D      &kp F        &kp G        &kp H       &kp J        &kp K        &kp L    &kp SEMI
&kp LEFT_ALT  &kp Z  &kp X  &kp C      &kp V        &kp B        &kp N       &kp M        &kp COMMA    &kp DOT  &kp FSLH  &kp RSHFT
                            &lt 6 TAB  &lt 2 SPACE  &lt 3 ESC    &lt 3 RALT  &lt 2 SPACE  &lt 1 ENTER
            >;

            label = "GAME";
        };

        game_num_layer {
            bindings = <
                 &trans     &trans  &trans  &trans         &kp Y      &trans  &trans  &trans  &trans  &trans
                 &trans     &kp N4  &kp N5  &kp N6         &kp H      &trans  &trans  &trans  &trans  &trans
&kp LS(LC(ESC))  &kp GRAVE  &kp N1  &kp N2  &kp N3         &kp N      &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans  &kp BACKSPACE  &kp DEL    &trans  &trans  &trans
            >;
        };

        clean_layer {
            bindings = <
       &none  &none  &none  &none  &none    &none  &none  &none  &none  &none
       &none  &none  &none  &none  &none    &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &none  &none  &none
            >;

            label = "CLEAN";
        };
    };
};
