#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define NUM  2
#define SYS  3
#define MSE  4
#define ETC  5

// mod-tap

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
};

// mouse key

#define U_MOUSE_MOVE_MAX 1250   /* default: 600 */
#define U_MOUSE_SCROLL_MAX 100  /* default: 10  */

&mmv {
    acceleration-exponent = <1>;
};

&mwh {
};

//      ┏━━━━┳━━━━┳━━━━┳━━━━┳━━━━┓  ┏━━━━┳━━━━┳━━━━┳━━━━┳━━━━┓
//      ┃ 0  ┃ 1  ┃ 2  ┃ 3  ┃ 4  ┃  ┃ 5  ┃ 6  ┃ 7  ┃ 8  ┃ 9  ┃
//      ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫  ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫
//      ┃ 10 ┃ 11 ┃ 12 ┃ 13 ┃ 14 ┃  ┃ 15 ┃ 16 ┃ 17 ┃ 18 ┃ 19 ┃
// ┏━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┫  ┣━━━━╋━━━━╋━━━━╋━━━━╋━━━━╋━━━━┓
// ┃ 20 ┃ 21 ┃ 22 ┃ 23 ┃ 24 ┃ 25 ┃  ┃ 26 ┃ 27 ┃ 28 ┃ 29 ┃ 30 ┃ 31 ┃
// ┗━━━━┻━━━━┻━━━━╋━━━━╋━━━━╋━━━━┫  ┣━━━━╋━━━━╋━━━━╋━━━━┻━━━━┻━━━━┛
//                ┃ 32 ┃ 33 ┃ 34 ┃  ┃ 35 ┃ 36 ┃ 37 ┃
//                ┗━━━━┻━━━━┻━━━━┛  ┗━━━━┻━━━━┻━━━━┛

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 0>;
            bindings = <&kp ESC>;
            layers = <0>;
        };

        combo_lpar {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LPAR>;
            layers = <0 1 2>;
        };

        combo_rpar {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp RPAR>;
            layers = <0 1 2>;
        };

        combo_lbkt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LBKT>;
            layers = <0 1 2>;
        };

        combo_rbkt {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RBKT>;
            layers = <0 1 2>;
        };

        combo_lbrc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp LBRC>;
            layers = <0 1 2>;
        };

        combo_rbrc {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp RBRC>;
            layers = <0 1 2>;
        };

        combo_lt {
            timeout-ms = <50>;
            key-positions = <2 11>;
            bindings = <&kp LT>;
            layers = <0 1 2>;
        };

        combo_gt {
            timeout-ms = <50>;
            key-positions = <7 18>;
            bindings = <&kp GT>;
            layers = <0 1 2>;
        };

        combo_plus {
            timeout-ms = <50>;
            key-positions = <23 24>;
            bindings = <&kp PLUS>;
            layers = <0 1 2>;
        };

        combo_equal {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp EQUAL>;
            layers = <0 1 2>;
        };

        combo_minus {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp MINUS>;
            layers = <0 1 2>;
        };

        combo_under {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp UNDER>;
            layers = <0 1 2>;
        };

        combo_colon {
            timeout-ms = <50>;
            key-positions = <6 16>;
            bindings = <&kp COLON>;
            layers = <0 1 2>;
        };

        combo_dqt {
            timeout-ms = <50>;
            key-positions = <7 17>;
            bindings = <&kp DQT>;
            layers = <0 1 2>;
        };

        combo_sqt {
            timeout-ms = <50>;
            key-positions = <8 18>;
            bindings = <&kp SQT>;
            layers = <0 1 2>;
        };

        combo_N1 {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp N1>;
            layers = <0 1 2>;
        };

        combo_N0 {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp N0>;
            layers = <0 1 2>;
        };

        combo_bspc2 {
            bindings = <&kp BACKSPACE>;
            key-positions = <16 27>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        combo_del2 {
            bindings = <&kp DEL>;
            key-positions = <17 28>;
            layers = <0 2 1>;
        };

        combo_bspc1 {
            bindings = <&kp BACKSPACE>;
            key-positions = <12 23>;
            layers = <0 1 2>;
        };

        combo_del1 {
            bindings = <&kp DEL>;
            key-positions = <13 24>;
            layers = <0 1 2>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <18 29>;
            layers = <0 1 2>;
        };

        combo_spc1 {
            bindings = <&kp ENTER>;
            key-positions = <11 22>;
            layers = <0 1 2>;
        };

        combo_cleanLayer {
            bindings = <&tog 5>;
            key-positions = <10 11 12 13>;
            layers = <0 5>;
        };

        combo_MSE {
            bindings = <&tog 4>;
            key-positions = <34 35>;
            layers = <0 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
         &kp Q       &kp W       &kp E        &kp R        &kp T            &kp Y        &kp U                &kp I         &kp O       &kp P
         &mt LGUI A  &mt LALT S  &mt LSHFT D  &mt LCTRL F  &kp G            &kp H        &mt RIGHT_CONTROL J  &mt RSHIFT K  &mt LALT L  &mt RGUI SEMI
&kp ESC  &lt 4 Z     &kp X       &kp C        &kp V        &kp B            &kp N        &kp M                &kp COMMA     &kp DOT     &lt 4 SLASH    &kp RSHFT
                                 &lt 3 TAB    &lt 2 SPACE  &kp BACKSPACE    &lt 3 ENTER  &lt 2 SPACE          &lt 1 RALT
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
           &trans     &mwh SCROLL_LEFT  &trans     &mwh SCROLL_RIGHT  &trans              &kp INS           &kp HOME   &kp UP     &kp END    &kp PG_UP
           &kp LGUI   &kp LALT          &kp LSHFT  &kp LCTRL          &mwh SCROLL_UP      &mwh SCROLL_UP    &kp LEFT   &kp DOWN   &kp RIGHT  &kp PG_DN
&kp LC(F)  &kp LC(Z)  &kp LC(X)         &kp LC(C)  &kp LC(V)          &mwh SCROLL_DOWN    &mwh SCROLL_DOWN  &kp LC(V)  &kp LC(C)  &kp LC(X)  &kp LC(Z)  &kp LC(F)
                                        &trans     &trans             &trans              &trans            &trans     &trans
            >;
        };

        num_layer {
            label = "NUM";
            bindings = <
        &kp GRAVE  &kp TILDE  &kp CARET  &kp AMPS  &kp STAR     &trans    &kp N7  &kp N8  &kp N9  &trans
        &kp EXCL   &kp AT     &kp HASH   &kp DLLR  &kp PRCNT    &trans    &kp N4  &kp N5  &kp N6  &trans
&trans  &trans     &kp N1     &kp N2     &kp N3    &trans       &kp PIPE  &kp N1  &kp N2  &kp N3  &kp BSLH  &trans
                              &trans     &trans    &trans       &trans    &trans  &kp N0
            >;
        };

        sys_layer {
            label = "SYS";
            bindings = <
        &bt BT_NXT    &bt BT_PRV    &bt BT_CLR  &trans  &kp CAPS    &kp PSCRN        &kp F7  &kp F8  &kp F9  &kp F12
        &kp C_NEXT    &kp C_PREV    &kp C_PP    &trans  &trans      &kp SLCK         &kp F4  &kp F5  &kp F6  &kp F11
&trans  &kp C_VOL_UP  &kp C_VOL_DN  &kp C_MUTE  &trans  &trans      &kp PAUSE_BREAK  &kp F1  &kp F2  &kp F3  &kp F10  &trans
                                    &trans      &trans  &trans      &trans           &trans  &trans
            >;
        };

        mouse_layer {
            label = "MSE";
            bindings = <
           &mwh SCROLL_UP    &mwh SCROLL_LEFT  &mmv MOVE_UP    &mwh SCROLL_RIGHT  &trans              &trans            &mwh SCROLL_LEFT  &mmv MOVE_UP    &mwh SCROLL_RIGHT  &mwh SCROLL_UP
           &mwh SCROLL_DOWN  &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT    &mwh SCROLL_UP      &mwh SCROLL_DOWN  &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT    &mwh SCROLL_DOWN
&mkp LCLK  &trans            &trans            &trans          &trans             &mwh SCROLL_DOWN    &mwh SCROLL_DOWN  &trans            &trans          &trans             &trans            &mkp LCLK
                                               &mkp LCLK       &mkp MCLK          &mkp RCLK           &mkp LCLK         &mkp MCLK         &mkp RCLK
            >;
        };

        clean_layer {
            bindings = <
       &none  &none  &none  &none  &none    &none  &none  &none  &none  &none
       &none  &none  &none  &none  &none    &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &none  &none  &none
            >;

            label = "CLEAN";
        };
    };
};
